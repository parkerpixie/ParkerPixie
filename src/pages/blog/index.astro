---
/* Blog index — lists .astro posts by reading an exported `post` object from each file */
const entries = await Astro.glob('./*.astro');

// Filter out this index file and only keep posts that export `post`
const posts = entries
  .filter(p => p.url !== '/blog/index' && typeof p.post === 'object')
  .map(p => ({
    url: p.url,               // e.g., /blog/blogmysoundtrack
    title: p.post.title,
    subtitle: p.post.subtitle,
    date: p.post.date,
    tags: p.post.tags || [],
    cover: p.post.cover || null
  }))
  // sort by date desc (fallback: unsorted)
  .sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>ParkerPixie · Blog</title>
    <meta name="description" content="The ParkerPixie blog — cozy crafts, capybara lore, gaming, and glittery life updates." />
    <link rel="icon" href="/CapyGoldIcon.png" />
    <style>
      :root{
        --bg:#0f0b14; --bg2:#130e1f; --ink:#f7f3ff; --muted:#bdb5d9; --brand:#8a5dff; --gold:#D8AA3B;
      }
      *{box-sizing:border-box}
      body{margin:0;font-family:system-ui, -apple-system, Segoe UI, Roboto, sans-serif;background:linear-gradient(180deg,var(--bg),var(--bg2));color:var(--ink)}
      a{color:inherit;text-decoration:none}
      nav{display:flex;justify-content:space-between;align-items:center;padding:1rem 2rem;background:linear-gradient(90deg,#2b2b40,#1a1a2e)}
      nav a.contact{background:#6c47ff;padding:.4rem 1rem;border-radius:20px;font-weight:bold}
      .wrap{max-width:1200px;margin:0 auto;padding:0 1rem}
      header{padding:2rem 0;display:flex;align-items:center;gap:.75rem}
      h1{margin:0;font-size:2rem}
      .grid{display:grid;grid-template-columns:repeat(auto-fill,minmax(280px,1fr));gap:1.25rem;padding-bottom:4rem}
      .card{background:rgba(255,255,255,.05);border:1px solid rgba(255,255,255,.08);border-radius:16px;overflow:hidden;display:flex;flex-direction:column}
      .thumb{width:100%;height:160px;object-fit:cover;background:#1d1630}
      .card-body{padding:1rem;display:flex;flex-direction:column;gap:.5rem}
      .title{font-weight:700;line-height:1.2}
      .subtitle{font-size:.95rem;color:var(--muted)}
      .meta{font-size:.85rem;color:#a7a1bf}
      .tags{display:flex;gap:.5rem;flex-wrap:wrap;margin-top:.25rem}
      .tag{font-size:.75rem;padding:.25rem .6rem;border:1px solid rgba(255,255,255,.15);border-radius:999px}
      .card:hover{transform:translateY(-2px);transition:transform .15s ease}
      .empty{opacity:.8;padding:2rem;border:1px dashed rgba(255,255,255,.2);border-radius:12px;text-align:center}
    </style>
  </head>
  <body>
    <nav>
      <div style="display:flex;align-items:center;gap:.5rem;">
        <img src="/CapyGoldIcon.png" alt="Capybara Icon" style="height:20px;" />
        <a href="/" style="font-weight:bold;color:#f9d6ff;">ParkerPixie</a>
      </div>
      <div style="display:flex;gap:1.5rem;">
        <a href="/about/">About</a>
        <a href="/blog/">Blog</a>
        <a href="/contact/" class="contact">Contact</a>
      </div>
    </nav>

    <div class="wrap">
      <header>
        <h1>Blog</h1>
        <span style="color:var(--gold);font-weight:700;letter-spacing:.02em;">· glitter, grit & growth</span>
      </header>

      {posts.length === 0 ? (
        <div class="empty">
          <p>No posts yet. Add a new <code>.astro</code> file in <code>src/pages/blog/</code> that exports <code>post</code> metadata.</p>
        </div>
      ) : (
        <div class="grid">
          {posts.map(p => (
            <a class="card" href={p.url}>
              {p.cover ? <img class="thumb" src={p.cover} alt={p.title} loading="eager" /> : <div class="thumb"></div>}
              <div class="card-body">
                <div class="title">{p.title}</div>
                {p.subtitle ? <div class="subtitle">{p.subtitle}</div> : null}
                <div class="meta">{p.date}</div>
                {p.tags?.length ? (
                  <div class="tags">
                    {p.tags.map(t => <span class="tag">{t}</span>)}
                  </div>
                ) : null}
              </div>
            </a>
          ))}
        </div>
      )}
    </div>
  </body>
</html>

